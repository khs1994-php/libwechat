workspace:
  base: /app
  path: .

#
# khs1994.com PHP CI/CD 由 khs1994-docker/ci 提供。
#
# @link http://docs.drone.io/
# @link https://github.com/khs1994-docker/ci
#
# 项目构建设置中 Repository Hooks 全部勾选
#

pipeline:

  script:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    # pull: true
    commands:
      - pwd
      - composer install -q
      # - composer update -q
      #
      # 服务初始化需要时间，这里延迟执行
      #
      - sleep 20
      - vendor/bin/phpunit
      # volumes:
      # - /Users/khs1994/khs1994/khs1994-lnmp/tmp/cache:/tmp/cache
      # - /data/lnmp/tmp/cache:/tmp/cache
    when:
      # environment: production
      # platform: linux/amd64
      # platform:  [ linux/*, windows/amd64 ]
      # status: changed
      # status:  [ failure, success ]
      # event: tag
      # event: [push, tag, deployment]
      # event: [push, pull_request, tag, deployment]
      event: [push, pull_request, tag]
      # branch: master
      # branch: prefix/*
      # branch: [master, develop]
      # branch:
      #   include: [ master, release/* ]
      #   exclude: [ release/1.0.0, release/1.1.* ]

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD=mytest
    # entrypoint: [ "mysqld" ]
    # command: [ "--character-set-server=utf8mb4" ]

  # postgresql:
  #   image: postgres:${POSTGRESQL_VERSION}
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=test

  redis:
    image: redis:${REDIS_VERSION}-alpine

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   command: [ --smallfiles ]

matrix:
  PHP_VERSION:
    - 7.2.10
    # - 7.1.22
    # - 7.0.32
    # - 5.6.38
  REDIS_VERSION:
    - 5.0-rc5
  MYSQL_VERSION:
    - 8.0.12
  MONGODB_VERSION:
    - 3.7.0
  POSTGRESQL_VERSION:
    - 10.0-alpine

# branches:
#   include: [ master, dev, feature/* ]
#   exclude: [ release/1.0.0, release/1.1.* ]
